// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"sudoku/pkg/sudoku"
	"sudoku/web/layouts"
)

func GamePage(data struct {
	Grids        *sudoku.SudokuPair
	Fails        int
	PuzzleJSON   string
	SolutionJSON string
}) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = layouts.MainLayout(layouts.LayoutProps{
			Title:           "Уютное Sudoku",
			MetaDescription: "Играйте в Sudoku онлайн",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"game-container\"><div class=\"game-controls\"><div class=\"difficulty\"><button class=\"difficulty-btn active\" data-difficulty=\"easy\">Легко</button> <button class=\"difficulty-btn\" data-difficulty=\"medium\">Средне</button> <button class=\"difficulty-btn\" data-difficulty=\"hard\">Сложно</button></div><div class=\"action-buttons\"><button class=\"action-btn restart\" id=\"restart-btn\"><i class=\"icon\">↺</i> Новая игра</button></div></div><div class=\"game-info\"><div class=\"timer\"><span class=\"timer-value\" id=\"timer\">00:00</span> <span class=\"timer-label\">Время</span></div><div class=\"mistakes\"><span class=\"mistakes-value\" id=\"mistakes\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(data.Fails)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 39, Col: 67}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</span> <span class=\"mistakes-label\">Ошибки</span></div></div><div class=\"game-message\" id=\"message\"></div><div class=\"sudoku-grid\" id=\"sudoku-grid\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for i, row := range data.Grids.Puzzle.Grid {
			for j, cell := range row {
				if cell.Value != 0 {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"cell-untouchable\" data-row=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var3 string
					templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(i)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 50, Col: 50}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\" data-col=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var4 string
					templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(j)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 50, Col: 65}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\" :class=\"{\r\n                                        &#39;fixed&#39;: @cell.Value != 0,\r\n                                        &#39;border-right-3&#39;: (j + 1) % 3 == 0 &amp;&amp; j != 8,\r\n                                        &#39;border-bottom-3&#39;: (i + 1) % 3 == 0 &amp;&amp; i != 8,\r\n                                        &#39;empty-cell&#39;: data.Grids.Empty.Grid[i][j].Value != 0\r\n                                     }\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var5 string
					templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(data.Grids.Puzzle.Grid[i][j].Value)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 56, Col: 48}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if cell.Value == 0 {
					if data.Grids.Empty.Grid[i][j].Value == 0 {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"cell\" data-row=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var6 string
						templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(i)
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 61, Col: 38}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" data-col=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var7 string
						templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(j)
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 61, Col: 53}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\" :class=\"{\r\n                                                                            &#39;fixed&#39;: @cell.Value != 0,\r\n                                                                            &#39;border-right-3&#39;: (j + 1) % 3 == 0 &amp;&amp; j != 8,\r\n                                                                            &#39;border-bottom-3&#39;: (i + 1) % 3 == 0 &amp;&amp; i != 8,\r\n                                                                            &#39;empty-cell&#39;: data.Grids.Empty.Grid[i][j].Value != 0\r\n                                                                         }\"></div>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, " ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					if data.Grids.Empty.Grid[i][j].Value != 0 {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<div class=\"cell error\" data-row=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var8 string
						templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(i)
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 71, Col: 44}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\" data-col=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var9 string
						templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(j)
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 71, Col: 59}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "\" :class=\"{\r\n                                                                                            &#39;fixed&#39;: @cell.Value != 0,\r\n                                                                                            &#39;border-right-3&#39;: (j + 1) % 3 == 0 &amp;&amp; j != 8,\r\n                                                                                            &#39;border-bottom-3&#39;: (i + 1) % 3 == 0 &amp;&amp; i != 8,\r\n                                                                                            &#39;empty-cell&#39;: data.Grids.Empty.Grid[i][j].Value != 0\r\n                                                                                         }\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var10 string
						templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(data.Grids.Empty.Grid[i][j].Value)
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 77, Col: 47}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "</div>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "</div><div class=\"number-pad\"><button class=\"number-btn\" data-value=\"1\">1</button> <button class=\"number-btn\" data-value=\"2\">2</button> <button class=\"number-btn\" data-value=\"3\">3</button> <button class=\"number-btn\" data-value=\"4\">4</button> <button class=\"number-btn\" data-value=\"5\">5</button> <button class=\"number-btn\" data-value=\"6\">6</button> <button class=\"number-btn\" data-value=\"7\">7</button> <button class=\"number-btn\" data-value=\"8\">8</button> <button class=\"number-btn\" data-value=\"9\">9</button> <button class=\"number-btn clear\" data-value=\"0\"><i class=\"icon\">⌫</i> Очистить</button></div></div><script>\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        const game = {\r\n            grid: JSON.parse('")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var11, templ_7745c5c3_Err := templruntime.ScriptContentInsideStringLiteral(data.PuzzleJSON)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 107, Col: 48}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var11)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "'),\r\n            solution: JSON.parse('")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var12, templ_7745c5c3_Err := templruntime.ScriptContentInsideStringLiteral(data.SolutionJSON)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 108, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var12)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "'),\r\n            difficulty: 'easy',\r\n            selectedCell: null,\r\n            mistakes: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var13, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(data.Fails)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/gamePage.templ`, Line: 111, Col: 35}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var13)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, ",\r\n            timer: 0,\r\n            timerInterval: null,\r\n            completed: false,\r\n\r\n            init() {\r\n                this.startTimer();\r\n                this.setupEventListeners();\r\n                this.renderGrid();\r\n            },\r\n\r\n            renderGrid() {\r\n                const cells = document.querySelectorAll('.cell');\r\n                cells.forEach(cell => {\r\n                    if (!cell.classList.contains('fixed')) {\r\n                        cell.addEventListener('click', () => this.selectCell(cell));\r\n                    }\r\n                });\r\n            },\r\n\r\n            startTimer() {\r\n                clearInterval(this.timerInterval);\r\n                this.timer = 0;\r\n                this.updateTimer();\r\n\r\n                this.timerInterval = setInterval(() => {\r\n                    this.timer++;\r\n                    this.updateTimer();\r\n                }, 1000);\r\n            },\r\n\r\n            updateTimer() {\r\n                const minutes = Math.floor(this.timer / 60);\r\n                const seconds = this.timer % 60;\r\n                document.getElementById('timer').textContent =\r\n                    `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n            },\r\n\r\n            setupEventListeners() {\r\n                document.querySelectorAll('.number-btn').forEach(btn => {\r\n                    btn.addEventListener('click', () => {\r\n                        if (this.selectedCell) {\r\n                            const value = parseInt(btn.dataset.value);\r\n                            this.setCellValue(value);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                document.getElementById('restart-btn').addEventListener('click', () => {\r\n                    this.restartGame();\r\n                });\r\n\r\n                document.querySelectorAll('.difficulty-btn').forEach(btn => {\r\n                    btn.addEventListener('click', () => {\r\n                        document.querySelectorAll('.difficulty-btn').forEach(b => {\r\n                            b.classList.remove('active');\r\n                        });\r\n                        btn.classList.add('active');\r\n                        this.difficulty = btn.dataset.difficulty;\r\n                        this.restartGame();\r\n                    });\r\n                });\r\n\r\n                document.addEventListener('keydown', (e) => {\r\n                    if (this.selectedCell && e.key >= '1' && e.key <= '9') {\r\n                        this.setCellValue(parseInt(e.key));\r\n                    } else if (this.selectedCell && e.key === 'Backspace') {\r\n                        this.setCellValue(0);\r\n                    }\r\n                });\r\n            },\r\n\r\n            selectCell(cell) {\r\n                if (this.selectedCell) {\r\n                    this.selectedCell.classList.remove('selected');\r\n                }\r\n\r\n                cell.classList.add('selected');\r\n                this.selectedCell = cell;\r\n            },\r\n\r\n            setCellValue(value) {\r\n                if (!this.selectedCell || this.completed) return;\r\n\r\n                const row = parseInt(this.selectedCell.dataset.row);\r\n                const col = parseInt(this.selectedCell.dataset.col);\r\n\r\n                if (value === 0) {\r\n                    this.selectedCell.textContent = '';\r\n                    this.selectedCell.classList.remove('error');\r\n                    this.grid[row][col].Value = 0;\r\n\r\n                    fetch('/api/cell', {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ row, col, value, isCorrect: true })\r\n                    }).catch(err => console.error(err));\r\n\r\n                    return;\r\n                }\r\n\r\n                const isCorrect = value === this.solution[row][col].Value;\r\n\r\n                this.selectedCell.textContent = value;\r\n                this.grid[row][col].Value = value;\r\n\r\n                if (!isCorrect) {\r\n                    this.selectedCell.classList.add('error');\r\n                    this.mistakes++;\r\n                    document.getElementById('mistakes').textContent = this.mistakes;\r\n                } else {\r\n                    this.selectedCell.classList.remove('error');\r\n                }\r\n\r\n                fetch('/api/cell', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ row, col, value, isCorrect })\r\n                }).catch(err => console.error('Ошибка при обновлении ячейки на сервере:', err));\r\n\r\n                this.checkCompletion();\r\n            },\r\n\r\n\r\n\r\n            checkCompletion() {\r\n                for (let i = 0; i < 9; i++) {\r\n                    for (let j = 0; j < 9; j++) {\r\n                        if (this.grid[i][j].Value !== this.solution[i][j].Value) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.completed = true;\r\n                clearInterval(this.timerInterval);\r\n                this.showMessage('Поздравляем! Вы решили головоломку!', 'success');\r\n            },\r\n\r\n            showMessage(text, type) {\r\n                const messageEl = document.getElementById('message');\r\n                messageEl.textContent = text;\r\n                messageEl.className = `game-message ${type}`;\r\n\r\n                setTimeout(() => {\r\n                    messageEl.className = 'game-message';\r\n                }, 3000);\r\n            },\r\n\r\n            restartGame() {\r\n                fetch(`/game/api/new?difficulty=${this.difficulty}`, {\r\n                    method: 'GET'\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        window.location.reload();\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error restarting game:', error);\r\n                        this.showMessage('Ошибка при запуске новой игры', 'error');\r\n                    });\r\n            }\r\n        };\r\n\r\n        game.init();\r\n    });\r\n</script><style>\r\n    .game-container {\r\n        max-width: 600px;\r\n        margin: 0 auto;\r\n        background: white;\r\n        border-radius: 16px;\r\n        box-shadow: 0 8px 24px rgba(122, 106, 93, 0.12);\r\n        padding: 24px;\r\n    }\r\n\r\n    .game-controls {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-bottom: 20px;\r\n        flex-wrap: wrap;\r\n        gap: 12px;\r\n    }\r\n\r\n    .difficulty {\r\n        display: flex;\r\n        gap: 8px;\r\n    }\r\n\r\n    .difficulty-btn {\r\n        padding: 8px 12px;\r\n        background: #e8dfd5;\r\n        border: none;\r\n        border-radius: 8px;\r\n        color: #5a4c3f;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n    }\r\n\r\n    .difficulty-btn.active {\r\n        background: #a67c52;\r\n        color: white;\r\n    }\r\n\r\n    .difficulty-btn:hover {\r\n        background: #b8a99a;\r\n        color: white;\r\n    }\r\n\r\n    .action-btn {\r\n        padding: 10px 16px;\r\n        background: #e8dfd5;\r\n        border: none;\r\n        border-radius: 8px;\r\n        color: #5a4c3f;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 6px;\r\n        transition: all 0.2s;\r\n    }\r\n\r\n    .action-btn:hover {\r\n        background: #b8a99a;\r\n        color: white;\r\n    }\r\n\r\n    .action-btn.restart {\r\n        background: #a67c52;\r\n        color: white;\r\n    }\r\n\r\n    .action-btn.restart:hover {\r\n        background: #7a6a5d;\r\n    }\r\n\r\n    .game-info {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom: 20px;\r\n        padding: 12px 16px;\r\n        background: #e8dfd5;\r\n        border-radius: 12px;\r\n    }\r\n\r\n    .timer,\r\n    .mistakes {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    .timer-value,\r\n    .mistakes-value {\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n        color: #7a6a5d;\r\n    }\r\n\r\n    .timer-label,\r\n    .mistakes-label {\r\n        font-size: 14px;\r\n        color: #8a7c6f;\r\n    }\r\n\r\n    .sudoku-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(9, 1fr);\r\n        gap: 1px;\r\n        background: #b8a99a;\r\n        border: 2px solid #9c8a7c;\r\n        border-radius: 4px;\r\n        overflow: hidden;\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n    .cell {\r\n        aspect-ratio: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: white;\r\n        font-size: 20px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        position: relative;\r\n        transition: background-color 0.2s;\r\n    }\r\n\r\n    .cell-untouchable {\r\n        aspect-ratio: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: white;\r\n        font-size: 20px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        position: relative;\r\n        transition: background-color 0.2s;\r\n        cursor: not-allowed;\r\n        pointer-events: none;\r\n    }\r\n\r\n    .cell-untouchable:hover {\r\n        background: #f8f4f0;\r\n    }\r\n\r\n    .cell:hover {\r\n        background: #f8f4f0;\r\n    }\r\n\r\n    .cell.fixed {\r\n        font-weight: 600;\r\n        color: #7a6a5d;\r\n        background: #f8f4f0;\r\n        cursor: default;\r\n    }\r\n\r\n    .cell.selected {\r\n        background: #e8dfd5;\r\n    }\r\n\r\n    .border-right-3 {\r\n        border-right: 2px solid #9c8a7c !important;\r\n    }\r\n\r\n    .border-bottom-3 {\r\n        border-bottom: 2px solid #9c8a7c !important;\r\n    }\r\n\r\n    .number-pad {\r\n        display: grid;\r\n        grid-template-columns: repeat(5, 1fr);\r\n        gap: 8px;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .number-btn {\r\n        aspect-ratio: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: #e8dfd5;\r\n        border: none;\r\n        border-radius: 8px;\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n        color: #5a4c3f;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n    }\r\n\r\n    .number-btn:hover {\r\n        background: #b8a99a;\r\n        color: white;\r\n    }\r\n\r\n    .number-btn.clear {\r\n        grid-column: span 2;\r\n        aspect-ratio: unset;\r\n        background: #a67c52;\r\n        color: white;\r\n    }\r\n\r\n    .number-btn.clear:hover {\r\n        background: #7a6a5d;\r\n    }\r\n\r\n    .game-message {\r\n        text-align: center;\r\n        padding: 12px;\r\n        border-radius: 8px;\r\n        margin-bottom: 16px;\r\n        display: none;\r\n        font-weight: 500;\r\n    }\r\n\r\n    .game-message.success {\r\n        background: #a5c0a8;\r\n        color: #2c4a2f;\r\n        display: block;\r\n    }\r\n\r\n    .game-message.error {\r\n        background: #d4a5a5;\r\n        color: #6d3a3a;\r\n        display: block;\r\n    }\r\n\r\n    .cell.error {\r\n        color: #a7a7a7;\r\n        font-weight: 500;\r\n        opacity: 0.6;\r\n        background-color: white;\r\n    }\r\n\r\n    .cell.empty-cell {\r\n        color: #c0b4a0;\r\n        font-weight: 500;\r\n        opacity: 0.6;\r\n        cursor: default;\r\n    }\r\n\r\n\r\n\r\n    @media (max-width: 500px) {\r\n        .game-container {\r\n            padding: 16px;\r\n        }\r\n\r\n        .game-controls {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n        }\r\n\r\n        .difficulty {\r\n            justify-content: center;\r\n        }\r\n\r\n        .action-buttons {\r\n            display: flex;\r\n            justify-content: center;\r\n            gap: 12px;\r\n        }\r\n\r\n        .cell {\r\n            font-size: 18px;\r\n        }\r\n    }\r\n</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
